{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Parameters": {

		"myVpc": {
			"Description": "Id for Vpc",
			"Type": "String"
		},
		"PublicSubnetKey1": {
			"Description": "Id for Subnet1",
			"Type": "String"
		},
		"PublicSubnetKey2": {
			"Description": "Id for subnet2",
			"Type": "String"
		},
		"PublicSubnetKey3": {
			"Description": "Id for subnet3",
			"Type": "String"
		},
		"circleci": {
			"Description": "circleci user",
			"Type": "String"
		},
		"KeyName": {
			"Description": "EC2 KeyPair to enable SSH access to the instance",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},

		"ImageID": {
			"Type": "String"
		},"cdm": {
			"Type": "String"
		},

		"CDARN": {
			"Type": "String"
		},
		"CDARN1": {
			"Type": "String"
		},
		"Bucket": {
			"Type": "String"
		},
		"Bucket1": {
			"Type": "String"
		},
		"Bucket3": {
			"Type": "String"
		},
               "CDR": {
			"Type": "String"
		}
	},
	"Conditions": {
		"Is-EC2-VPC": {
			"Fn::Equals": [{
					"Ref": "AWS::Region"
				},
				"us-east-1"
			]
		}
	},
	"Resources": {
		"myImage": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Ref": "ImageID"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"InstanceType": "t2.medium",
				"BlockDeviceMappings": [{
					"DeviceName": "/dev/sda1",
					"Ebs": {
						"VolumeSize": 20,
						"VolumeType": "gp2",
						"DeleteOnTermination": "true"
					}
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"\n",
							[
								"#!/bin/bash -xe ",
								"sudo su",
								"yum install ruby wget java-1.8.0-openjdk-devel -y",
								"wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
								"chmod +x ./install \n",
								"./install auto \n",
								"service codedeploy-agent start \n",
								"groupadd tomcat",
								"useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
								"cd ~",
								"mkdir /opt/tomcat",
								"wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz",
								"tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
								"cd /opt/tomcat",
								"chgrp -R tomcat /opt/tomcat",
								"chmod -R g+r conf",
								"chmod g+x conf",
								"chown -R tomcat webapps/ work/ temp/ logs/",
								"cd /usr/lib/systemd/system",
								"touch tomcat.service",
								"echo '[Unit]' > tomcat.service",
								"echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
								"echo 'After=syslog.target network.target' >> tomcat.service",
								"echo '[Service]' >> tomcat.service",
								"echo 'Type=forking' >> tomcat.service",
								"echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service",
								"echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
								"echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
								"echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
								"echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service",
								"echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
								"echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
								"echo 'User=tomcat' >> tomcat.service",
								"echo 'Group=tomcat' >> tomcat.service",
								"echo 'UMask=0007' >> tomcat.service",
								"echo 'Restart=on-failure' >> tomcat.service",
								"echo '[Install]' >> tomcat.service",
								"echo 'WantedBy=multi-user.target' >> tomcat.service",
								"echo '#!/bin/sh' >> /opt/tomcat/bin/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=jdbc:mysql://",
											{
												"Fn::GetAtt": [
													"myRDSInstance",
													"Endpoint.Address"
												]
											},
											":3306/csye6225\"' >> /opt/tomcat/bin/setenv.sh \n"
										]
									]
								},
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.profiles.active=dev\"'  >> /opt/tomcat/bin/setenv.sh \n",
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=csye6225master\"'  >> /opt/tomcat/bin/setenv.sh \n",
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=csye6225password\"'  >> /opt/tomcat/bin/setenv.sh \n",
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.dbname=csye6225\"'  >> /opt/tomcat/bin/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.amazonProperties.bucketName=",

											{
												"Ref": "Bucket3"
											},

											"\"' >> /opt/tomcat/bin/setenv.sh \n"
										]
									]
								},
								"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Dspring.amazonProperties.endpoint=https://s3.us-east-1.amazonaws.com\"'  >> /opt/tomcat/bin/setenv.sh \n",
								{
									"Fn::Join": [
										"", [
											"sudo echo 'JAVA_OPTS=\"$JAVA_OPTS -Djsa.s3.bucket=",
											{
												"Fn::Join": [
													"", [
														"",
														{
															"Ref": "Bucket3"
														}
													]
												]
											},
											"\"' >> /opt/tomcat/bin/setenv.sh \n"
										]
									]
								},
								"chmod +x /opt/tomcat/bin/setenv.sh\n",
								"#systemctl daemon-reload\n",
								"systemctl enable tomcat.service\n",
								"systemctl start tomcat.service\n"
							]
						]
					}
				},
				"NetworkInterfaces": [{
					"AssociatePublicIpAddress": "true",
					"DeviceIndex": "0",
					"GroupSet": [{
						"Ref": "webappSecurityGroup"
					}],
					"SubnetId": {
						"Ref": "PublicSubnetKey1"
					}
				}],
				"IamInstanceProfile": "ec2instanceprofile",
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"",
							[{
									"Ref": "AWS::StackName"
								},
								"-csye6225-Ec2Instance"
							]
						]
					}
				}]
			}
		},
    

               "codeDeployApp": {
			"Type": "AWS::CodeDeploy::Application",
			"Properties": {
				"ApplicationName": "csye6225-webapp",
				"ComputePlatform": "Server"
			}
		},
		"deploymentGroup": {
			"Type": "AWS::CodeDeploy::DeploymentGroup",
			"Properties": {
				"ApplicationName": {
					"Ref": "codeDeployApp"
				},
				"Ec2TagFilters": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"",
							[{
									"Ref": "AWS::StackName"
								},
								"-csye6225-Ec2Instance"
							]
						]
					},
					"Type": "KEY_AND_VALUE"
				}],
				"DeploymentGroupName": "csye6225-webapp-deployment",
				"DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
				"DeploymentStyle": {
					"DeploymentType": "IN_PLACE",
					"DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
				},
				"ServiceRoleArn": {
					"Ref" : "CDR"
				},
				"AutoRollbackConfiguration": {
					"Enabled": "True",
					"Events": ["DEPLOYMENT_FAILURE"]
				}
			}
		},
		"myDynamoDB": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"TableName": "csye-6225",
				"AttributeDefinitions": [{
					"AttributeName": "id",
					"AttributeType": "S"
				}
				],
				"KeySchema": [{
					"AttributeName": "id",
					"KeyType": "HASH"
				}


                                ],
				"ProvisionedThroughput": {
					"ReadCapacityUnits": "5",
					"WriteCapacityUnits": "5"
				},
				"TimeToLiveSpecification": {
		  	 		"AttributeName" : "tokenTTL",
					"Enabled": "true"
				}
			}
		},
		"RDSDBSubnetGroup": {
			"Type": "AWS::RDS::DBSubnetGroup",
			"Properties": {
				"DBSubnetGroupDescription": "RDS DB Subnet Group",
				"SubnetIds": [{
						"Ref": "PublicSubnetKey2"
					},
					{
						"Ref": "PublicSubnetKey3"
					}
				]
			}
		},
               

             

		"myRDSInstance": {
			"Type": "AWS::RDS::DBInstance",
			"Properties": {
				"AllocatedStorage": "5",
				"DBInstanceClass": "db.t2.medium",
				"DBInstanceIdentifier": "csye6225",
				"DBName": "csye6225",
				"DBSubnetGroupName": {
					"Ref": "RDSDBSubnetGroup"
				},
				"Engine": "MySQL",
				"MasterUsername": "csye6225master",
				"MasterUserPassword": "csye6225password",
				"MultiAZ": false,
				"PubliclyAccessible": true,
				"VPCSecurityGroups": {
					"Fn::If": [
						"Is-EC2-VPC",
						[{
							"Fn::GetAtt": [
								"DBSecurityGroup",
								"GroupId"
							]
						}],
						{
							"Ref": "AWS::NoValue"
						}
					]
				}
			}
		},
		"webappSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Allow http traffic to webserver",
				"VpcId": {
					"Ref": "myVpc"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "443",
						"ToPort": "443",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "8080",
						"ToPort": "8080",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "9000",
						"ToPort": "9000",
						"CidrIp": "0.0.0.0/0"
					}
				]
			}
		},
		"DBSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Condition": "Is-EC2-VPC",
			"Properties": {
				"GroupName": "csye6225-rds",
				"GroupDescription": "allow connections from specified source security group and ec2 Security group",
				"VpcId": {
					"Ref": "myVpc"
				},
				"SecurityGroupIngress": [{
					"IpProtocol": "tcp",
					"FromPort": "3306",
					"ToPort": "3306",
					"SourceSecurityGroupId": {
						"Ref": "webappSecurityGroup"
					}
				}]
			}
		}
	}
}
